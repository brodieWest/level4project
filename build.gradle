plugins {
    id 'application'
    id 'edu.sc.seis.launch4j' version '2.4.4'
    id 'org.beryx.jlink' version '2.1.8'
    id 'org.openjfx.javafxplugin' version '0.0.5'
}

group 'level4project'
version '0.6'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.testfx:testfx-core:4.0.14-alpha"
    testCompile "org.testfx:testfx-junit:4.0.15-alpha"
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.1.0'
    compile 'org.json:json:20171018'
    compile group: 'net.sourceforge.jeval', name: 'jeval', version: '0.9.4'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
    compile 'com.google.code.gson:gson:2.8.5'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
}


javafx {
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

mainClassName = 'main/main.ui.main.Mainfx'

jar {
    manifest {
        attributes (
                'Main-Class': 'main.ui.main.Mainfx'
        )
    }
}

launch4j {
    mainClassName = 'main.ui.main.Mainfx'
    bundledJre64Bit = true
    bundledJrePath = "jre"
    outputDir = "windows0.6"
}

jlink {
    mergedModule {
        requires 'java.naming'
        requires 'java.xml'
        requires 'java.sql'
    }
    mainClassName = 'main.ui.main.Mainfx'
    options = ['--no-header-files', '--no-man-pages']
    launcher{
        name = 'hello'
        jvmArgs = ['-Dlog4j.configurationFile=./log4j2.xml']
    }
    javaHome = 'C:\\Users\\Bob\\Downloads\\openjdk-11.0.1_windows-x64_bin\\jdk-11'
    imageDir = file("$buildDir/windows$version/jre")
}

task buildExe() {
    dependsOn 'clean'
    dependsOn 'jlink'
    dependsOn 'createExe'
}

task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'main.ui.main.Main'
    }
    baseName = 'all-in-one-jar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}